{"version":3,"sources":["webpack://test-blog/./node_modules/path-browserify/index.js","webpack://test-blog/./gatsby-config.js","webpack://test-blog/./node_modules/react-share/es/hocs/createIcon.js","webpack://test-blog/./node_modules/react-share/es/FacebookIcon.js","webpack://test-blog/./node_modules/react-share/es/LineIcon.js","webpack://test-blog/./node_modules/react-share/es/LinkedinIcon.js","webpack://test-blog/./node_modules/react-share/es/TwitterIcon.js","webpack://test-blog/./src/pages/blog.js"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","name","_format","parse","ret","delimiter","win32","module","exports","require","siteMetadata","title","description","author","siteUrl","pathPrefix","plugins","options","trackingId","publisherId","maxWidth","tight","ordered","fromHeading","toHeading","pathToConfigModule","__assign","Object","assign","t","s","n","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","createIcon","iconConfig","Icon","_a","bgStyle","borderRadius","iconFillColor","round","size","rest","viewBox","width","height","cx","cy","r","fill","color","style","rx","ry","d","defaultProps","networkName","Blog","data","location","Layout","SEO","pathname","className","allMarkdownRemark","edges","map","node","onMouseEnter","id","document","getElementById","display","showShareButton","frontmatter","onMouseLeave","hideShowButton","key","fields","slug","css","rhythm","Link","date"],"mappings":"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","file":"component---src-pages-blog-js-eeb2fc662415eb806c43.js","sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n} // Resolves . and .. elements in a path with directory names\n\n\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length) code = path.charCodeAt(i);else if (code === 47\n    /*/*/\n    ) break;else code = 47\n    /*/*/\n    ;\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (lastSlash === i - 1 || dots === 1) {// NOOP\n        } else if (lastSlash !== i - 1 && dots === 2) {\n          if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46\n          /*.*/\n          || res.charCodeAt(res.length - 2) !== 46\n          /*.*/\n          ) {\n              if (res.length > 2) {\n                var lastSlashIndex = res.lastIndexOf('/');\n\n                if (lastSlashIndex !== res.length - 1) {\n                  if (lastSlashIndex === -1) {\n                    res = '';\n                    lastSegmentLength = 0;\n                  } else {\n                    res = res.slice(0, lastSlashIndex);\n                    lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n                  }\n\n                  lastSlash = i;\n                  dots = 0;\n                  continue;\n                }\n              } else if (res.length === 2 || res.length === 1) {\n                res = '';\n                lastSegmentLength = 0;\n                lastSlash = i;\n                dots = 0;\n                continue;\n              }\n            }\n\n          if (allowAboveRoot) {\n            if (res.length > 0) res += '/..';else res = '..';\n            lastSegmentLength = 2;\n          }\n        } else {\n          if (res.length > 0) res += '/' + path.slice(lastSlash + 1, i);else res = path.slice(lastSlash + 1, i);\n          lastSegmentLength = i - lastSlash - 1;\n        }\n\n        lastSlash = i;\n        dots = 0;\n      } else if (code === 46\n    /*.*/\n    && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n\n  if (!dir) {\n    return base;\n  }\n\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0) path = arguments[i];else {\n        if (cwd === undefined) cwd = process.cwd();\n        path = cwd;\n      }\n      assertPath(path); // Skip empty entries\n\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47\n      /*/*/\n      ;\n    } // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n\n\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0) return '/' + resolvedPath;else return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n  normalize: function normalize(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var isAbsolute = path.charCodeAt(0) === 47\n    /*/*/\n    ;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47\n    /*/*/\n    ; // Normalize the path\n\n    path = normalizeStringPosix(path, !isAbsolute);\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47\n    /*/*/\n    ;\n  },\n  join: function join() {\n    if (arguments.length === 0) return '.';\n    var joined;\n\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n\n      if (arg.length > 0) {\n        if (joined === undefined) joined = arg;else joined += '/' + arg;\n      }\n    }\n\n    if (joined === undefined) return '.';\n    return posix.normalize(joined);\n  },\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n    if (from === to) return '';\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n    if (from === to) return ''; // Trim any leading backslashes\n\n    var fromStart = 1;\n\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47\n      /*/*/\n      ) break;\n    }\n\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart; // Trim any leading backslashes\n\n    var toStart = 1;\n\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47\n      /*/*/\n      ) break;\n    }\n\n    var toEnd = to.length;\n    var toLen = toEnd - toStart; // Compare paths to find the longest common path from root\n\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47\n          /*/*/\n          ) {\n              // We get here if `from` is the exact base path for `to`.\n              // For example: from='/foo/bar'; to='/foo/bar/baz'\n              return to.slice(toStart + i + 1);\n            } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47\n          /*/*/\n          ) {\n              // We get here if `to` is the exact base path for `from`.\n              // For example: from='/foo/bar/baz'; to='/foo/bar'\n              lastCommonSep = i;\n            } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n\n        break;\n      }\n\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode) break;else if (fromCode === 47\n      /*/*/\n      ) lastCommonSep = i;\n    }\n\n    var out = ''; // Generate the relative path based on the path difference between `to`\n    // and `from`\n\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47\n      /*/*/\n      ) {\n          if (out.length === 0) out += '..';else out += '/..';\n        }\n    } // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n\n\n    if (out.length > 0) return out + to.slice(toStart + lastCommonSep);else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47\n      /*/*/\n      ) ++toStart;\n      return to.slice(toStart);\n    }\n  },\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47\n    /*/*/\n    ;\n    var end = -1;\n    var matchedSlash = true;\n\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n\n      if (code === 47\n      /*/*/\n      ) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n\n        if (code === 47\n        /*/*/\n        ) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47\n        /*/*/\n        ) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    var preDotState = 0;\n\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n\n      if (code === 47\n      /*/*/\n      ) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n\n          continue;\n        }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === 46\n      /*.*/\n      ) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n    preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n\n    return path.slice(startDot, end);\n  },\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n\n    return _format('/', pathObject);\n  },\n  parse: function parse(path) {\n    assertPath(path);\n    var ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47\n    /*/*/\n    ;\n    var start;\n\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    var preDotState = 0; // Get non-dir info\n\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n\n      if (code === 47\n      /*/*/\n      ) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n\n          continue;\n        }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === 46\n      /*.*/\n      ) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n    preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n    return ret;\n  },\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\nposix.posix = posix;\nmodule.exports = posix;","const path = require(`path`)\n\nmodule.exports = {\n  siteMetadata: {\n    title: `Aimily`,\n    description: `Transform any Notion pages to Gatsby static sites`,\n    author: `Lucas`,\n    siteUrl: `https://schywi.github.io/`,\n  },\n  pathPrefix: \"casa\",\n  plugins: [\n    {\n      resolve: `gatsby-plugin-google-analytics`,\n      options: {\n        trackingId: `UA-178749604-1`,\n      },\n    },\n    {\n      resolve: `gatsby-plugin-google-adsense`,\n      options: {\n        publisherId: `ca-pub-xxxxxxxxxx`,\n      },\n    },\n    `gatsby-plugin-dark-mode`,\n    `gatsby-plugin-emotion`,\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `blog-posts`,\n        path: path.join(__dirname, `content`, `blog`),\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `pages`,\n        path: path.join(__dirname, `src`, `pages`),\n      },\n    },\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: path.join(__dirname, `src`, `images`),\n      },\n    },\n    `gatsby-plugin-sharp`,\n    `gatsby-transformer-sharp`,\n    {\n      resolve: `gatsby-transformer-remark`,\n      options: {\n        plugins: [\n          `gatsby-remark-embed-video`,\n          `gatsby-remark-responsive-iframe`,\n          {\n            resolve: `gatsby-remark-images`,\n            options: {\n              // It's important to specify the maxWidth (in pixels) of\n              // the content container as this plugin uses this as the\n              // base for generating different widths of each image.\n              maxWidth: 680,\n            },\n          },\n          {\n            resolve: `gatsby-remark-table-of-contents`,\n            options: {\n              tight: false,\n              ordered: false,\n              fromHeading: 2,\n              toHeading: 4,\n            },\n          },\n          `gatsby-remark-autolink-headers`,\n          `gatsby-remark-prismjs`\n        ],\n      },\n    },\n    {\n      resolve: `gatsby-plugin-typography`,\n      options: {\n        pathToConfigModule: `src/utils/typography`,\n      },\n    },\n    `gatsby-plugin-catch-links`,\n    `gatsby-plugin-react-helmet`,\n  ],\n}\n","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nexport default function createIcon(iconConfig) {\n  var Icon = function Icon(_a) {\n    var bgStyle = _a.bgStyle,\n        borderRadius = _a.borderRadius,\n        iconFillColor = _a.iconFillColor,\n        round = _a.round,\n        size = _a.size,\n        rest = __rest(_a, [\"bgStyle\", \"borderRadius\", \"iconFillColor\", \"round\", \"size\"]);\n\n    return React.createElement(\"svg\", __assign({\n      viewBox: \"0 0 64 64\",\n      width: size,\n      height: size\n    }, rest), round ? React.createElement(\"circle\", {\n      cx: \"32\",\n      cy: \"32\",\n      r: \"31\",\n      fill: iconConfig.color,\n      style: bgStyle\n    }) : React.createElement(\"rect\", {\n      width: \"64\",\n      height: \"64\",\n      rx: borderRadius,\n      ry: borderRadius,\n      fill: iconConfig.color,\n      style: bgStyle\n    }), React.createElement(\"path\", {\n      d: iconConfig.path,\n      fill: iconFillColor\n    }));\n  };\n\n  Icon.defaultProps = {\n    bgStyle: {},\n    borderRadius: 0,\n    iconFillColor: 'white',\n    size: 64\n  };\n  return Icon;\n}","import createIcon from './hocs/createIcon';\nvar FacebookIcon = createIcon({\n  color: '#3b5998',\n  networkName: 'facebook',\n  path: 'M34.1,47V33.3h4.6l0.7-5.3h-5.3v-3.4c0-1.5,0.4-2.6,2.6-2.6l2.8,0v-4.8c-0.5-0.1-2.2-0.2-4.1-0.2 c-4.1,0-6.9,2.5-6.9,7V28H24v5.3h4.6V47H34.1z'\n});\nexport default FacebookIcon;","import createIcon from './hocs/createIcon';\nvar LineIcon = createIcon({\n  color: '#00b800',\n  networkName: 'line',\n  path: 'M52.62 30.138c0 3.693-1.432 7.019-4.42 10.296h.001c-4.326 4.979-14 11.044-16.201 11.972-2.2.927-1.876-.591-1.786-1.112l.294-1.765c.069-.527.142-1.343-.066-1.865-.232-.574-1.146-.872-1.817-1.016-9.909-1.31-17.245-8.238-17.245-16.51 0-9.226 9.251-16.733 20.62-16.733 11.37 0 20.62 7.507 20.62 16.733zM27.81 25.68h-1.446a.402.402 0 0 0-.402.401v8.985c0 .221.18.4.402.4h1.446a.401.401 0 0 0 .402-.4v-8.985a.402.402 0 0 0-.402-.401zm9.956 0H36.32a.402.402 0 0 0-.402.401v5.338L31.8 25.858a.39.39 0 0 0-.031-.04l-.002-.003-.024-.025-.008-.007a.313.313 0 0 0-.032-.026.255.255 0 0 1-.021-.014l-.012-.007-.021-.012-.013-.006-.023-.01-.013-.005-.024-.008-.014-.003-.023-.005-.017-.002-.021-.003-.021-.002h-1.46a.402.402 0 0 0-.402.401v8.985c0 .221.18.4.402.4h1.446a.401.401 0 0 0 .402-.4v-5.337l4.123 5.568c.028.04.063.072.101.099l.004.003a.236.236 0 0 0 .025.015l.012.006.019.01a.154.154 0 0 1 .019.008l.012.004.028.01.005.001a.442.442 0 0 0 .104.013h1.446a.4.4 0 0 0 .401-.4v-8.985a.402.402 0 0 0-.401-.401zm-13.442 7.537h-3.93v-7.136a.401.401 0 0 0-.401-.401h-1.447a.4.4 0 0 0-.401.401v8.984a.392.392 0 0 0 .123.29c.072.068.17.111.278.111h5.778a.4.4 0 0 0 .401-.401v-1.447a.401.401 0 0 0-.401-.401zm21.429-5.287c.222 0 .401-.18.401-.402v-1.446a.401.401 0 0 0-.401-.402h-5.778a.398.398 0 0 0-.279.113l-.005.004-.006.008a.397.397 0 0 0-.111.276v8.984c0 .108.043.206.112.278l.005.006a.401.401 0 0 0 .284.117h5.778a.4.4 0 0 0 .401-.401v-1.447a.401.401 0 0 0-.401-.401h-3.93v-1.519h3.93c.222 0 .401-.18.401-.402V29.85a.401.401 0 0 0-.401-.402h-3.93V27.93h3.93z'\n});\nexport default LineIcon;","import createIcon from './hocs/createIcon';\nvar LinkedinIcon = createIcon({\n  color: '#007fb1',\n  networkName: 'linkedin',\n  path: 'M20.4,44h5.4V26.6h-5.4V44z M23.1,18c-1.7,0-3.1,1.4-3.1,3.1c0,1.7,1.4,3.1,3.1,3.1 c1.7,0,3.1-1.4,3.1-3.1C26.2,19.4,24.8,18,23.1,18z M39.5,26.2c-2.6,0-4.4,1.4-5.1,2.8h-0.1v-2.4h-5.2V44h5.4v-8.6 c0-2.3,0.4-4.5,3.2-4.5c2.8,0,2.8,2.6,2.8,4.6V44H46v-9.5C46,29.8,45,26.2,39.5,26.2z'\n});\nexport default LinkedinIcon;","import createIcon from './hocs/createIcon';\nvar TwitterIcon = createIcon({\n  color: '#00aced',\n  networkName: 'twitter',\n  path: 'M48,22.1c-1.2,0.5-2.4,0.9-3.8,1c1.4-0.8,2.4-2.1,2.9-3.6c-1.3,0.8-2.7,1.3-4.2,1.6 C41.7,19.8,40,19,38.2,19c-3.6,0-6.6,2.9-6.6,6.6c0,0.5,0.1,1,0.2,1.5c-5.5-0.3-10.3-2.9-13.5-6.9c-0.6,1-0.9,2.1-0.9,3.3 c0,2.3,1.2,4.3,2.9,5.5c-1.1,0-2.1-0.3-3-0.8c0,0,0,0.1,0,0.1c0,3.2,2.3,5.8,5.3,6.4c-0.6,0.1-1.1,0.2-1.7,0.2c-0.4,0-0.8,0-1.2-0.1 c0.8,2.6,3.3,4.5,6.1,4.6c-2.2,1.8-5.1,2.8-8.2,2.8c-0.5,0-1.1,0-1.6-0.1c2.9,1.9,6.4,2.9,10.1,2.9c12.1,0,18.7-10,18.7-18.7 c0-0.3,0-0.6,0-0.8C46,24.5,47.1,23.4,48,22.1z'\n});\nexport default TwitterIcon;","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { css } from \"@emotion/react\"\nimport { rhythm } from \"../utils/typography\"\nimport { Link, graphql } from \"gatsby\"\nimport SEO from \"../components/SEO\"\nimport { siteMetadata } from \"../../gatsby-config\"\nimport {\n  FacebookShareButton,\n  LineShareButton,\n  LinkedinShareButton,\n  PinterestShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n\n} from \"react-share\";\n\nimport {\n  FacebookShareCount,\n  FacebookIcon,\n  LineIcon,\n  LinkedinIcon,\n  PinterestIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nexport default function Blog({ data, location }) {\n\n  const showShareButton = (id) => {\n   const shareDiv = document.getElementById(`${id}`)\n   shareDiv.style.display = \"flex\"\n  }\n  const hideShowButton = (id) => {\n    const shareDiv = document.getElementById(`${id}`)\n    shareDiv.style.display = \"none\"\n   }\n  return (\n    <Layout>\n      <SEO\n        title={siteMetadata.title}\n        description={siteMetadata.description}\n        pathname={location.pathname}\n      />\n      <main  className=\"BlogPageContainer\">\n     \n        \n \n     \n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <article onMouseEnter={()=> {\n            const id = node.frontmatter.title\n            showShareButton(id)\n          }}\n          onMouseLeave={\n            () => {\n              const id = node.frontmatter.title\n              hideShowButton(id)\n            }\n          }\n            key={node.fields.slug}\n            css={css`\n              margin-bottom: ${rhythm(2)};\n            `}\n          >\n            <div id={node.frontmatter.title} className=\"share\">\n             <span>Share post:</span>\n\n              <div className=\"iconsDiv\">\n                   <FacebookIcon size={40} />\n                   <LineIcon size={40} />\n                   <LinkedinIcon size={40} />\n                   <TwitterIcon size={40} />\n              </div>\n             \n            </div>\n            <div className=\"wrapTextBlog\">\n            <header>\n             \n             <Link\n               to={`/blog${node.fields.slug}`}\n               css={css`\n                 text-decoration: none;\n                 color: inherit;\n\n                 &:hover {\n                   text-decoration-color: var(--textTitle);\n                 }\n               `}\n             >\n               <h3\n                 css={css`\n                   margin-bottom: ${rhythm(1 / 4)};\n                 `}\n               >\n                 {node.frontmatter.title}{\" \"}\n                \n               </h3>\n             </Link>\n             <small>{node.frontmatter.date}</small>\n           </header>\n           <p>{node.frontmatter.description}</p>\n            </div>\n          \n          </article>\n        ))}\n      </main>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/content/blog/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}